# Note:
# This file is adapted to use in the production environment, so it's a little different from the regular
# docker-compose.yml - this docker-stack.yml file has larger resources limits, has newer compose file version
# and has enhenced "deploy" section. Moreover, you can uncomment lines that specify that services can be deployed
# only on worker nodes

version: '3.9'

services:
  flask-database:
    image: jakubszuber/custom-postgres
    deploy:
      replicas: 2
      labels: [app=local-monument-website]
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
      placement:
        max_replicas_per_node: 1
        #constraints: [node.role == worker]
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=flask_db
    volumes:
      - postgres_data:/var/lib/postgresql/data

  wsgi-server:
    image: jakubszuber/custom-gunicorn
    deploy:
      replicas: 2
      labels: [app=local-monument-website]
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
      placement:
        max_replicas_per_node: 1
        #constraints: [node.role == worker]
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    depends_on:
      -   flask-database

  proxy-server:
    image: jakubszuber/custom-nginx
    deploy:
      replicas: 2
      labels: [app=local-monument-website]
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
      placement:
        max_replicas_per_node: 1
        #constraints: [node.role == worker]
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    ports:
      - "80:80"
    depends_on:
      - wsgi-server

volumes:
  postgres_data: {}
