apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-database
spec:
  serviceName: postgres-database
  replicas: 1
  selector:
    matchLabels:
      app: postgres-database
  template:
    metadata:
      labels:
        app: postgres-database
        app.kubernetes.io/name: mysql  # TODO
    spec:
      containers:
      - name: postgres-database
        image: custom-postgres
        resources:
          limits:
            cpus: '0.50'
            memory: 256M
          reservations:
            cpus: '0.25'
            memory: 128M
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: admin
        - name: POSTGRES_PASSWORD
          value: admin
        - name: POSTGRES_DB
          value: flask_db
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-database
spec:
  selector:
    app: postgres-database
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
  clusterIP: None
  publishNotReadyAddresses: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gunicorn-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gunicorn-server
  template:
    metadata:
      labels:
        app: gunicorn-server
        app.kubernetes.io/name: mysql  # TODO
    spec:
      containers:
      - name: gunicorn-server
        image: flask_app
        resources:
          limits:
            cpus: '0.50'
            memory: 512M
          reservations:
            cpus: '0.25'
            memory: 256M
        ports:
        - containerPort: 5000
        env:
        - name: POSTGRES_USER
          value: admin
        - name: POSTGRES_PASSWORD
          value: admin
        - name: POSTGRES_DB
          value: flask_db
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: gunicorn-server
spec:
  selector:
    app: gunicorn-server
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-server
  template:
    metadata:
      labels:
        app: nginx-server
        app.kubernetes.io/name: mysql  # TODO
    spec:
      containers:
      - name: nginx-server
        image: custom-nginx
        resources:
          limits:
            cpus: '0.50'
            memory: 256M
          reservations:
            cpus: '0.25'
            memory: 128M
        ports:
        - containerPort: 80
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-server
spec:
  type: NodePort
  selector:
    app: nginx-server
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
    nodePort: 30000
